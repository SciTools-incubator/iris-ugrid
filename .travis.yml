language: minimal
dist: xenial

env:
  matrix:
    - PYTHON_VERSION=37

install:
  # capture installation dir
  - export INSTALL_DIR=$(pwd)

  # iris test-data reference is just a commit
  - export IRIS_TEST_DATA_REF="672dbb46c986038fa5d06a3d8aad691fd1951e07"

  # iris reference is to the latest "ugrid" branch
  - export IRIS_BRANCH="ugrid"

  # download and install iris test data
  - >
    wget --quiet -O iris-test-data.zip https://github.com/SciTools/iris-test-data/archive/${IRIS_TEST_DATA_REF}.zip;
    unzip -q iris-test-data.zip;
    mv "iris-test-data-${IRIS_TEST_DATA_REF}" iris-test-data;

  # download iris branch
  - >
    wget --quiet -O iris.zip wget https://github.com/SciTools/iris/archive/${IRIS_BRANCH}.zip;
    unzip -q iris.zip;
    mv "iris-${IRIS_BRANCH}" iris;

  # install miniconda
  - >
    echo 'Installing miniconda';
    export CONDA_BASE="https://repo.continuum.io/miniconda/Miniconda";
    wget --quiet ${CONDA_BASE}3-latest-Linux-x86_64.sh -O miniconda.sh;
    bash miniconda.sh -b -p ${HOME}/miniconda;
    export PATH="${HOME}/miniconda/bin:${PATH}";

  # Create the testing conda environment
  # ------------------------------------
  - >
    echo 'Configure conda';
    conda config --set always_yes yes --set changeps1 no;
    conda config --set show_channel_urls True;
    conda config --add channels conda-forge;
    conda update --quiet conda;
    export ENV_NAME='test-environment';

  # Create a conda env, from the iris environment file
  # ------------------------------------------------
  - >
    echo 'Create an environment based on Iris dependencies';
    IRIS_REQS_FILE="iris/requirements/ci/py${PYTHON_VERSION}.yml";
    conda env create --quiet -n ${ENV_NAME} --file ${IRIS_REQS_FILE};
    source activate ${ENV_NAME};

  # Conda-install our own additional dependencies.
  - >
    echo 'Install own dependencies';
    conda install --file requirements/conda_requirements.txt;

  # Output environment debug info
  - >
    conda list -n ${ENV_NAME};
    conda info -a;

  # set iris config paths
  - >
    echo 'Configure Iris';
    export PREFIX="${HOME}/miniconda/envs/${ENV_NAME}";
    SITE_CFG="iris/lib/iris/etc/site.cfg";
    echo "[Resources]" > ${SITE_CFG};
    echo "test_data_dir = $(pwd)/iris-test-data/test_data" >> ${SITE_CFG};
    echo "doc_dir = $(pwd)/docs/iris" >> ${SITE_CFG};
    echo "[System]" >> ${SITE_CFG};
    echo "udunits2_path = ${PREFIX}/lib/libudunits2.so" >> ${SITE_CFG};

  # install iris
  - >
    echo 'Install Iris';
    cd iris;
    python setup.py --quiet install;

  # Finally, install iris-ugrid itself.
  # FOR NOW : just put it on the module searchpath (no actual install code)
  - >
    echo 'Add iris-ugrid to path';
    cd $INSTALL_DIR;
    export PYTHONPATH=$(readlink -f .):$PYTHONPATH;


script:
  - >
    echo $(black --version);
    black --check --exclude "iris/" .;

  - pytest -v ./iris_ugrid/tests
